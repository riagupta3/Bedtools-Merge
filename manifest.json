{
  "name": "bioinformatics/bedtools/merge",
  "version": "0.0.1",
  "title": "Combines overlapping or book-ended features in an interval file into a single feature which spans all of the combined features, using the bedtools merge function.",
  "schema": {
    "input": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        # change parameter names
        # -i
        "intervalFile": {
          "type": "string",
          "format": "file",
          "required": true,
          "title": "Interval file.", 
          # containing multiple regions? add to description
          "description": "[BED](https://genome.ucsc.edu/FAQ/FAQformat.html#format1)/[GFF](https://genome.ucsc.edu/FAQ/FAQformat.html#format3)/[VCF](https://genome.ucsc.edu/goldenPath/help/vcf.html)/[BAM](https://genome.ucsc.edu/goldenPath/help/bam.html)" containing mutliple regions."
        },
        # -s
        "strandedness": {
          "type": "boolean",
          "required": false,
          "default": false,
          "title": "Force strandedness by only merging features on the same strand.",
          "description": "Only merge intervals that are overlapping/book-ended AND are on the same strand. This is disabled, by default."
        },
        # -S
        "specificStrand": {
          "type": "string",
          # add enum - forward or reverse
          "required": false,
          "enum": [
            "forward",
            "reverse"
          ],
          # what would the default be here
          "default",
          "title": "Force merge for one specific strand only.",
        # fix description
          "description": "Follow with "forward" or "reverse" to force merge from a specific strand. By default, merging is done without respect to strand."
        },
        # -d
        "distance": {
          "type": "integer",
          "required": false,
          "default": 0,
          "title": "Maximum distance between features allowed for features to be merged."
          "description": "The maximum distance between features allowed for features to be merged. The default is 0, meaning only overlapping and/or book-ended features are merged."
        },
      # 1 parameter that sepcifies both c and o because they are used together  
      # parameter is operation
      # both c and o are required
      "operation": {
        "type": "object",
        "required": false,
        #### resume here
      }
      "c": {
          # add array
          "type": "array",
          "required": false,
          "uniqueItems": true,
          "items": {
            # just description no format
            # type is integer
          }
          "title": "Specify columns from the input file to operate upon"
          "description": "Specify columns from the input file to operate upon. Requires use of 'o' operator to specify the operation that should be applied. Multiple columns can be specified in a comma-delimited list."
        },
        "o": {
          # inside o parameter, make it array - make it an enum
          "type": "string",
          "required": false,
          "default": "sum",
          "title": "Specify the operation that should be applied to -c."
          "description": "If there is only column, but multiple operations, all operations will be applied on that column. If there is only one operation but mutliple columns, that operation will be applied to all columns. Otherwise, the number of columns must match the the number of operations, and will be applied in respective order."
        },
        "header": {
          "type": "boolean",
          "required": false,
          "default": false, 
          "title": "Print the header from the A file prior to results."
        },
        # look for what kinds of delimiters there are, list them in enum, put comma as default (options: , ; |), want to restrict the use here
        # -delim
        "delimiter": {
          "type": "string",
          "required": false,
          "default": ";",
          "title": "Specify a custom delimiter for the -c and -o options."
        },
        "outputPrefix": {
          "type": "string",
          "required": false,
          "default": "merged",
          "pattern": "^[a-zA-Z0-9._-]+$",
          "title": "Prefix name for the output file."
        }
      }
    },
    "output": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "mergedFile": {
          "type": "string",
          "format": "file",
          "required": true,
          "title": "File with merged features."
          # fill in description depending on the type of output file - BED file <- ask David
          "description": "BED file with the merged features."
        }
      }
    }
  },
  "author": "batchx@rgupta",
  "changeLog"
  "runtime" {
  }
}
